"use strict";var et=Object.create;var X=Object.defineProperty;var tt=Object.getOwnPropertyDescriptor;var rt=Object.getOwnPropertyNames;var nt=Object.getPrototypeOf,ct=Object.prototype.hasOwnProperty;var ot=(e,t)=>{for(var r in t)X(e,r,{get:t[r],enumerable:!0})},qe=(e,t,r,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of rt(t))!ct.call(e,o)&&o!==r&&X(e,o,{get:()=>t[o],enumerable:!(n=tt(t,o))||n.enumerable});return e};var at=(e,t,r)=>(r=e!=null?et(nt(e)):{},qe(t||!e||!e.__esModule?X(r,"default",{value:e,enumerable:!0}):r,e)),st=e=>qe(X({},"__esModule",{value:!0}),e);var bt={};ot(bt,{AccountIdentifier:()=>w,BadFeeError:()=>W,IndexCanister:()=>D,InsufficientFundsError:()=>C,InvalidAccountIDError:()=>q,InvalidSenderError:()=>I,LedgerCanister:()=>ee,SubAccount:()=>$,TransferError:()=>g,TxCreatedInFutureError:()=>H,TxDuplicateError:()=>G,TxTooOldError:()=>U,accountIdentifierFromBytes:()=>ht,accountIdentifierToBytes:()=>xt,checkAccountId:()=>gt,mapIcrc1TransferError:()=>Be,mapTransferError:()=>ke,mapTransferProtoError:()=>ve,principalToAccountIdentifier:()=>yt});module.exports=st(bt);var O=require("@dfinity/utils");function it(e,...t){if(!(e instanceof Uint8Array))throw new Error("Expected Uint8Array");if(t.length>0&&!t.includes(e.length))throw new Error(`Expected Uint8Array of length ${t}, not of length=${e.length}`)}function Ae(e,t=!0){if(e.destroyed)throw new Error("Hash instance has been destroyed");if(t&&e.finished)throw new Error("Hash#digest() has already been called")}function Ce(e,t){it(e);let r=t.outputLen;if(e.length<r)throw new Error(`digestInto() expects output buffer of length at least ${r}`)}var ut=e=>e instanceof Uint8Array;var K=e=>new DataView(e.buffer,e.byteOffset,e.byteLength),y=(e,t)=>e<<32-t|e>>>t,dt=new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68;if(!dt)throw new Error("Non little-endian hardware is not supported");function pt(e){if(typeof e!="string")throw new Error(`utf8ToBytes expected string, got ${typeof e}`);return new Uint8Array(new TextEncoder().encode(e))}function Ne(e){if(typeof e=="string"&&(e=pt(e)),!ut(e))throw new Error(`expected Uint8Array, got ${typeof e}`);return e}var J=class{clone(){return this._cloneInto()}},At={}.toString;function Ue(e){let t=n=>e().update(Ne(n)).digest(),r=e();return t.outputLen=r.outputLen,t.blockLen=r.blockLen,t.create=()=>e(),t}function lt(e,t,r,n){if(typeof e.setBigUint64=="function")return e.setBigUint64(t,r,n);let o=BigInt(32),c=BigInt(4294967295),a=Number(r>>o&c),i=Number(r&c),u=n?4:0,f=n?0:4;e.setUint32(t+u,a,n),e.setUint32(t+f,i,n)}var Z=class extends J{constructor(t,r,n,o){super(),this.blockLen=t,this.outputLen=r,this.padOffset=n,this.isLE=o,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(t),this.view=K(this.buffer)}update(t){Ae(this);let{view:r,buffer:n,blockLen:o}=this;t=Ne(t);let c=t.length;for(let a=0;a<c;){let i=Math.min(o-this.pos,c-a);if(i===o){let u=K(t);for(;o<=c-a;a+=o)this.process(u,a);continue}n.set(t.subarray(a,a+i),this.pos),this.pos+=i,a+=i,this.pos===o&&(this.process(r,0),this.pos=0)}return this.length+=t.length,this.roundClean(),this}digestInto(t){Ae(this),Ce(t,this),this.finished=!0;let{buffer:r,view:n,blockLen:o,isLE:c}=this,{pos:a}=this;r[a++]=128,this.buffer.subarray(a).fill(0),this.padOffset>o-a&&(this.process(n,0),a=0);for(let s=a;s<o;s++)r[s]=0;lt(n,o-8,BigInt(this.length*8),c),this.process(n,0);let i=K(t),u=this.outputLen;if(u%4)throw new Error("_sha2: outputLen should be aligned to 32bit");let f=u/4,h=this.get();if(f>h.length)throw new Error("_sha2: outputLen bigger than state");for(let s=0;s<f;s++)i.setUint32(4*s,h[s],c)}digest(){let{buffer:t,outputLen:r}=this;this.digestInto(t);let n=t.slice(0,r);return this.destroy(),n}_cloneInto(t){t||(t=new this.constructor),t.set(...this.get());let{blockLen:r,buffer:n,length:o,finished:c,destroyed:a,pos:i}=this;return t.length=o,t.pos=i,t.finished=c,t.destroyed=a,o%r&&t.buffer.set(n),t}};var ft=(e,t,r)=>e&t^~e&r,mt=(e,t,r)=>e&t^e&r^t&r,_t=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),T=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),A=new Uint32Array(64),we=class extends Z{constructor(){super(64,32,8,!1),this.A=T[0]|0,this.B=T[1]|0,this.C=T[2]|0,this.D=T[3]|0,this.E=T[4]|0,this.F=T[5]|0,this.G=T[6]|0,this.H=T[7]|0}get(){let{A:t,B:r,C:n,D:o,E:c,F:a,G:i,H:u}=this;return[t,r,n,o,c,a,i,u]}set(t,r,n,o,c,a,i,u){this.A=t|0,this.B=r|0,this.C=n|0,this.D=o|0,this.E=c|0,this.F=a|0,this.G=i|0,this.H=u|0}process(t,r){for(let s=0;s<16;s++,r+=4)A[s]=t.getUint32(r,!1);for(let s=16;s<64;s++){let l=A[s-15],_=A[s-2],p=y(l,7)^y(l,18)^l>>>3,d=y(_,17)^y(_,19)^_>>>10;A[s]=d+A[s-7]+p+A[s-16]|0}let{A:n,B:o,C:c,D:a,E:i,F:u,G:f,H:h}=this;for(let s=0;s<64;s++){let l=y(i,6)^y(i,11)^y(i,25),_=h+l+ft(i,u,f)+_t[s]+A[s]|0,d=(y(n,2)^y(n,13)^y(n,22))+mt(n,o,c)|0;h=f,f=u,u=i,i=a+_|0,a=c,c=o,o=n,n=_+d|0}n=n+this.A|0,o=o+this.B|0,c=c+this.C|0,a=a+this.D|0,i=i+this.E|0,u=u+this.F|0,f=f+this.G|0,h=h+this.H|0,this.set(n,o,c,a,i,u,f,h)}roundClean(){A.fill(0)}destroy(){this.set(0,0,0,0,0,0,0,0),this.buffer.fill(0)}},Oe=class extends we{constructor(){super(),this.A=-1056596264,this.B=914150663,this.C=812702999,this.D=-150054599,this.E=-4191439,this.F=1750603025,this.G=1694076839,this.H=-1090891868,this.outputLen=28}};var Y=Ue(()=>new Oe);var Fe=require("@dfinity/agent"),N=()=>import("@dfinity/nns-proto"),He=async({agent:e,canisterId:t,methodName:r,arg:n})=>{let o=await e.call(t,{methodName:r,arg:n,effectiveCanisterId:t});if(!o.response.ok)throw new Error(["Call failed:",`  Method: ${r}`,`  Canister ID: ${t}`,`  Request ID: ${o.requestId}`,`  HTTP status code: ${o.response.status}`,`  HTTP status text: ${o.response.statusText}`].join(`
`));let c=await Fe.polling.pollForResponse(e,t,o.requestId,Fe.polling.defaultStrategy());return new Uint8Array(c)},Ge=async({agent:e,canisterId:t,methodName:r,arg:n})=>{let o=await e.query(t,{methodName:r,arg:n});if(o.status=="rejected")throw new Error(["Call failed:",`  Method: ${r}`,`  Canister ID: ${t}`,`  HTTP status code: ${o.reject_code}`,`  HTTP status text: ${o.reject_message}`].join(`
`));return new Uint8Array(o.reply.arg)};var w=class e{constructor(t){this.bytes=t}static fromHex(t){return new e(Uint8Array.from(Buffer.from(t,"hex")))}static fromPrincipal({principal:t,subAccount:r=$.ZERO}){let n=(0,O.asciiStringToByteArray)(`
account-id`),o=Y.create();o.update((0,O.arrayOfNumberToUint8Array)([...n,...t.toUint8Array(),...r.toUint8Array()]));let c=o.digest(),a=(0,O.bigEndianCrc32)(c),i=new Uint8Array([...a,...c]);return new e(i)}async toProto(){let{AccountIdentifier:t}=await N(),r=new t;return r.setHash(this.bytes),r}toHex(){return(0,O.uint8ArrayToHexString)(this.bytes)}toUint8Array(){return this.bytes}toNumbers(){return Array.from(this.bytes)}toAccountIdentifierHash(){return{hash:this.toUint8Array()}}},v=class v{constructor(t){this.bytes=t}static fromBytes(t){return t.length!=32?Error("Subaccount length must be 32-bytes"):new v(t)}static fromPrincipal(t){let r=new Uint8Array(32).fill(0),n=t.toUint8Array();r[0]=n.length;for(let o=0;o<n.length;o++)r[1+o]=n[o];return new v(r)}static fromID(t){if(t<0||t>255)throw"Subaccount ID must be >= 0 and <= 255";let r=new Uint8Array(32).fill(0);return r[31]=t,new v(r)}toUint8Array(){return this.bytes}};v.ZERO=v.fromID(0);var $=v;var Me=require("@dfinity/utils"),g=class extends Error{},I=class extends g{},q=class extends Error{},C=class extends g{constructor(r){super();this.balance=r}},U=class extends g{constructor(r){super();this.allowed_window_secs=r}},H=class extends g{},G=class extends g{constructor(r){super();this.duplicateOf=r}},W=class extends g{constructor(r){super();this.expectedFee=r}},ke=e=>"TxDuplicate"in e?new G(e.TxDuplicate.duplicate_of):"InsufficientFunds"in e?new C(e.InsufficientFunds.balance.e8s):"TxCreatedInFuture"in e?new H:"TxTooOld"in e?new U(Number(e.TxTooOld.allowed_window_nanos)):"BadFee"in e?new W(e.BadFee.expected_fee.e8s):new g(`Unknown error type ${JSON.stringify(e)}`),Be=e=>"Duplicate"in e?new G(e.Duplicate.duplicate_of):"InsufficientFunds"in e?new C(e.InsufficientFunds.balance):"CreatedInFuture"in e?new H:"TooOld"in e?new U:"BadFee"in e?new W(e.BadFee.expected_fee):new g(`Unknown error type ${JSON.stringify(e)}`),ve=e=>{let{message:t}=e;if(t.includes("Reject code: 5")){if(t.match(/Sending from (.*) is not allowed/))return new I;{let r=t.match(/transaction.*duplicate.* in block (\d+)/);if(r&&r.length>1)return new G(BigInt(r[1]))}{let r=t.match(/debit account.*, current balance: (\d*(\.\d*)?)/);if(r&&r.length>1){let n=(0,Me.convertStringToE8s)(r[1]);if(typeof n=="bigint")return new C(n)}}if(t.includes("is in future"))return new H;{let r=t.match(/older than (\d+)/);if(r&&r.length>1)return new U(Number.parseInt(r[1]))}}throw e};var M=require("@dfinity/utils");var $e=({IDL:e})=>{let t=e.Record({ledger_id:e.Principal}),r=e.Record({max_results:e.Nat64,start:e.Opt(e.Nat64),account_identifier:e.Text}),n=e.Record({e8s:e.Nat64}),o=e.Record({timestamp_nanos:e.Nat64}),c=e.Variant({Approve:e.Record({fee:n,from:e.Text,allowance:n,expires_at:e.Opt(o),spender:e.Text}),Burn:e.Record({from:e.Text,amount:n}),Mint:e.Record({to:e.Text,amount:n}),Transfer:e.Record({to:e.Text,fee:n,from:e.Text,amount:n}),TransferFrom:e.Record({to:e.Text,fee:n,from:e.Text,amount:n,spender:e.Text})}),a=e.Record({memo:e.Nat64,icrc1_memo:e.Opt(e.Vec(e.Nat8)),operation:c,created_at_time:e.Opt(o)}),i=e.Record({id:e.Nat64,transaction:a}),u=e.Record({balance:e.Nat64,transactions:e.Vec(i),oldest_tx_id:e.Opt(e.Nat64)}),f=e.Record({message:e.Text}),h=e.Variant({Ok:u,Err:f}),s=e.Record({owner:e.Principal,subaccount:e.Opt(e.Vec(e.Nat8))}),l=e.Record({max_results:e.Nat,start:e.Opt(e.Nat),account:s}),_=e.Record({start:e.Nat,length:e.Nat}),p=e.Record({blocks:e.Vec(e.Vec(e.Nat8)),chain_length:e.Nat64}),d=e.Record({url:e.Text,method:e.Text,body:e.Vec(e.Nat8),headers:e.Vec(e.Tuple(e.Text,e.Text))}),m=e.Record({body:e.Vec(e.Nat8),headers:e.Vec(e.Tuple(e.Text,e.Text)),status_code:e.Nat16}),k=e.Record({num_blocks_synced:e.Nat64});return e.Service({get_account_identifier_balance:e.Func([e.Text],[e.Nat64],[]),get_account_identifier_transactions:e.Func([r],[h],[]),get_account_transactions:e.Func([l],[h],[]),get_blocks:e.Func([_],[p],[]),http_request:e.Func([d],[m],[]),icrc1_balance_of:e.Func([s],[e.Nat64],[]),ledger_id:e.Func([],[e.Principal],[]),status:e.Func([],[k],[])})};var We=({IDL:e})=>{let t=e.Record({ledger_id:e.Principal}),r=e.Record({max_results:e.Nat64,start:e.Opt(e.Nat64),account_identifier:e.Text}),n=e.Record({e8s:e.Nat64}),o=e.Record({timestamp_nanos:e.Nat64}),c=e.Variant({Approve:e.Record({fee:n,from:e.Text,allowance:n,expires_at:e.Opt(o),spender:e.Text}),Burn:e.Record({from:e.Text,amount:n}),Mint:e.Record({to:e.Text,amount:n}),Transfer:e.Record({to:e.Text,fee:n,from:e.Text,amount:n}),TransferFrom:e.Record({to:e.Text,fee:n,from:e.Text,amount:n,spender:e.Text})}),a=e.Record({memo:e.Nat64,icrc1_memo:e.Opt(e.Vec(e.Nat8)),operation:c,created_at_time:e.Opt(o)}),i=e.Record({id:e.Nat64,transaction:a}),u=e.Record({balance:e.Nat64,transactions:e.Vec(i),oldest_tx_id:e.Opt(e.Nat64)}),f=e.Record({message:e.Text}),h=e.Variant({Ok:u,Err:f}),s=e.Record({owner:e.Principal,subaccount:e.Opt(e.Vec(e.Nat8))}),l=e.Record({max_results:e.Nat,start:e.Opt(e.Nat),account:s}),_=e.Record({start:e.Nat,length:e.Nat}),p=e.Record({blocks:e.Vec(e.Vec(e.Nat8)),chain_length:e.Nat64}),d=e.Record({url:e.Text,method:e.Text,body:e.Vec(e.Nat8),headers:e.Vec(e.Tuple(e.Text,e.Text))}),m=e.Record({body:e.Vec(e.Nat8),headers:e.Vec(e.Tuple(e.Text,e.Text)),status_code:e.Nat16}),k=e.Record({num_blocks_synced:e.Nat64});return e.Service({get_account_identifier_balance:e.Func([e.Text],[e.Nat64],["query"]),get_account_identifier_transactions:e.Func([r],[h],["query"]),get_account_transactions:e.Func([l],[h],["query"]),get_blocks:e.Func([_],[p],["query"]),http_request:e.Func([d],[m],["query"]),icrc1_balance_of:e.Func([s],[e.Nat64],["query"]),ledger_id:e.Func([],[e.Principal],["query"]),status:e.Func([],[k],["query"])})};var Ee=require("@dfinity/principal"),ze=Ee.Principal.fromText("ryjl3-tyaaa-aaaaa-aaaba-cai"),je=Ee.Principal.fromText("qhbym-qaaaa-aaaaa-aaafq-cai");var L=class extends Error{};var Qe=e=>e instanceof w?e:w.fromHex(e),Ve=e=>e instanceof w?e.toHex():e;var D=class e extends M.Canister{constructor(){super(...arguments);this.accountBalance=({certified:r,accountIdentifier:n})=>this.caller({certified:r}).get_account_identifier_balance(Ve(n));this.getTransactions=async({certified:r,accountIdentifier:n,start:o,maxResults:c})=>{let a=await this.caller({certified:r}).get_account_identifier_transactions({account_identifier:Ve(n),start:(0,M.toNullable)(o),max_results:c});if("Err"in a)throw new L(a.Err.message);return a.Ok}}static create({canisterId:r,...n}){let{service:o,certifiedService:c,canisterId:a}=(0,M.createServices)({options:{...n,canisterId:r??je},idlFactory:We,certifiedIdlFactory:$e});return new e(a,o,c)}};var Le=require("@dfinity/utils");var Xe=({IDL:e})=>{let t=e.Vec(e.Nat8),r=e.Record({owner:e.Principal,subaccount:e.Opt(t)}),n=e.Record({icrc2:e.Bool}),o=e.Record({maximum_number_of_accounts:e.Opt(e.Nat64),icrc1_minting_account:e.Opt(r),feature_flags:e.Opt(n)}),c=e.Record({e8s:e.Nat64}),a=e.Text,i=e.Record({secs:e.Nat64,nanos:e.Nat32}),u=e.Record({num_blocks_to_archive:e.Nat64,trigger_threshold:e.Nat64,max_message_size_bytes:e.Opt(e.Nat64),cycles_for_archive_creation:e.Opt(e.Nat64),node_max_memory_size_bytes:e.Opt(e.Nat64),controller_id:e.Principal}),f=e.Record({send_whitelist:e.Vec(e.Principal),token_symbol:e.Opt(e.Text),transfer_fee:e.Opt(c),minting_account:a,maximum_number_of_accounts:e.Opt(e.Nat64),accounts_overflow_trim_quantity:e.Opt(e.Nat64),transaction_window:e.Opt(i),max_message_size_bytes:e.Opt(e.Nat64),icrc1_minting_account:e.Opt(r),archive_options:e.Opt(u),initial_values:e.Vec(e.Tuple(a,c)),token_name:e.Opt(e.Text),feature_flags:e.Opt(n)}),h=e.Variant({Upgrade:e.Opt(o),Init:f}),s=e.Nat64,l=e.Record({start:s,length:e.Nat64}),_=e.Nat64,p=e.Vec(e.Nat8),d=e.Record({timestamp_nanos:e.Nat64}),m=e.Variant({Approve:e.Record({fee:c,from:p,allowance_e8s:e.Int,allowance:c,expires_at:e.Opt(d),spender:p}),Burn:e.Record({from:p,amount:c,spender:e.Opt(p)}),Mint:e.Record({to:p,amount:c}),Transfer:e.Record({to:p,fee:c,from:p,amount:c}),TransferFrom:e.Record({to:p,fee:c,from:p,amount:c,spender:p})}),k=e.Record({memo:_,icrc1_memo:e.Opt(e.Vec(e.Nat8)),operation:e.Opt(m),created_at_time:d}),z=e.Record({transaction:k,timestamp:d,parent_hash:e.Opt(e.Vec(e.Nat8))}),te=e.Record({blocks:e.Vec(z)}),B=e.Variant({BadFirstBlockIndex:e.Record({requested_index:s,first_valid_index:s}),Other:e.Record({error_message:e.Text,error_code:e.Nat64})}),re=e.Variant({Ok:te,Err:B}),ne=e.Func([l],[re],[]),ce=e.Record({callback:ne,start:s,length:e.Nat64}),b=e.Record({certificate:e.Opt(e.Vec(e.Nat8)),blocks:e.Vec(z),chain_length:e.Nat64,first_block_index:s,archived_blocks:e.Vec(ce)}),oe=e.Record({callback:e.Func([l],[e.Variant({Ok:e.Vec(e.Vec(e.Nat8)),Err:B})],[]),start:e.Nat64,length:e.Nat64}),ae=e.Record({certificate:e.Opt(e.Vec(e.Nat8)),blocks:e.Vec(e.Vec(e.Nat8)),chain_length:e.Nat64,first_block_index:e.Nat64,archived_blocks:e.Vec(oe)}),se=e.Record({account:p}),ie=e.Record({account:a}),R=e.Record({canister_id:e.Principal}),P=e.Record({archives:e.Vec(R)}),x=e.Nat,ue=e.Variant({Int:e.Int,Nat:e.Nat,Blob:e.Vec(e.Nat8),Text:e.Text}),de=e.Nat64,j=e.Record({to:r,fee:e.Opt(x),memo:e.Opt(e.Vec(e.Nat8)),from_subaccount:e.Opt(t),created_at_time:e.Opt(de),amount:x}),S=e.Nat,Q=e.Variant({GenericError:e.Record({message:e.Text,error_code:e.Nat}),TemporarilyUnavailable:e.Null,BadBurn:e.Record({min_burn_amount:x}),Duplicate:e.Record({duplicate_of:S}),BadFee:e.Record({expected_fee:x}),CreatedInFuture:e.Record({ledger_time:e.Nat64}),TooOld:e.Null,InsufficientFunds:e.Record({balance:x})}),pe=e.Variant({Ok:S,Err:Q}),le=e.Record({account:r,spender:r}),fe=e.Record({allowance:x,expires_at:e.Opt(d)}),me=e.Record({fee:e.Opt(x),memo:e.Opt(e.Vec(e.Nat8)),from_subaccount:e.Opt(t),created_at_time:e.Opt(d),amount:x,expected_allowance:e.Opt(x),expires_at:e.Opt(d),spender:r}),_e=e.Variant({GenericError:e.Record({message:e.Text,error_code:e.Nat}),TemporarilyUnavailable:e.Null,Duplicate:e.Record({duplicate_of:S}),BadFee:e.Record({expected_fee:x}),AllowanceChanged:e.Record({current_allowance:x}),CreatedInFuture:e.Record({ledger_time:e.Nat64}),TooOld:e.Null,Expired:e.Record({ledger_time:e.Nat64}),InsufficientFunds:e.Record({balance:x})}),xe=e.Variant({Ok:S,Err:_e}),he=e.Record({to:a,fee:c,memo:_,from_subaccount:e.Opt(t),created_at_time:e.Opt(d),amount:c}),ye=e.Record({to:p,fee:c,memo:_,from_subaccount:e.Opt(t),created_at_time:e.Opt(d),amount:c}),ge=e.Variant({TxTooOld:e.Record({allowed_window_nanos:e.Nat64}),BadFee:e.Record({expected_fee:c}),TxDuplicate:e.Record({duplicate_of:s}),TxCreatedInFuture:e.Null,InsufficientFunds:e.Record({balance:c})}),be=e.Variant({Ok:s,Err:ge}),Re=e.Record({}),Te=e.Record({transfer_fee:c});return e.Service({_blocks:e.Func([l],[b],[]),_encoded_blocks:e.Func([l],[ae],[]),account_balance:e.Func([se],[c],[]),account_balance_dfx:e.Func([ie],[c],[]),account_identifier:e.Func([r],[p],[]),archives:e.Func([],[P],[]),decimals:e.Func([],[e.Record({decimals:e.Nat32})],[]),icrc1_balance_of:e.Func([r],[x],[]),icrc1_decimals:e.Func([],[e.Nat8],[]),icrc1_fee:e.Func([],[x],[]),icrc1_metadata:e.Func([],[e.Vec(e.Tuple(e.Text,ue))],[]),icrc1_minting_account:e.Func([],[e.Opt(r)],[]),icrc1_name:e.Func([],[e.Text],[]),icrc1_supported_standards:e.Func([],[e.Vec(e.Record({url:e.Text,name:e.Text}))],[]),icrc1_symbol:e.Func([],[e.Text],[]),icrc1_total_supply:e.Func([],[x],[]),icrc1_transfer:e.Func([j],[pe],[]),icrc2_allowance:e.Func([le],[fe],[]),icrc2_approve:e.Func([me],[xe],[]),name:e.Func([],[e.Record({name:e.Text})],[]),send_dfx:e.Func([he],[s],[]),symbol:e.Func([],[e.Record({symbol:e.Text})],[]),transfer:e.Func([ye],[be],[]),transfer_fee:e.Func([Re],[Te],[])})};var Je=({IDL:e})=>{let t=e.Vec(e.Nat8),r=e.Record({owner:e.Principal,subaccount:e.Opt(t)}),n=e.Record({icrc2:e.Bool}),o=e.Record({maximum_number_of_accounts:e.Opt(e.Nat64),icrc1_minting_account:e.Opt(r),feature_flags:e.Opt(n)}),c=e.Record({e8s:e.Nat64}),a=e.Text,i=e.Record({secs:e.Nat64,nanos:e.Nat32}),u=e.Record({num_blocks_to_archive:e.Nat64,trigger_threshold:e.Nat64,max_message_size_bytes:e.Opt(e.Nat64),cycles_for_archive_creation:e.Opt(e.Nat64),node_max_memory_size_bytes:e.Opt(e.Nat64),controller_id:e.Principal}),f=e.Record({send_whitelist:e.Vec(e.Principal),token_symbol:e.Opt(e.Text),transfer_fee:e.Opt(c),minting_account:a,maximum_number_of_accounts:e.Opt(e.Nat64),accounts_overflow_trim_quantity:e.Opt(e.Nat64),transaction_window:e.Opt(i),max_message_size_bytes:e.Opt(e.Nat64),icrc1_minting_account:e.Opt(r),archive_options:e.Opt(u),initial_values:e.Vec(e.Tuple(a,c)),token_name:e.Opt(e.Text),feature_flags:e.Opt(n)}),h=e.Variant({Upgrade:e.Opt(o),Init:f}),s=e.Vec(e.Nat8),l=e.Record({account:s}),_=e.Record({account:a}),p=e.Record({canister_id:e.Principal}),d=e.Record({archives:e.Vec(p)}),m=e.Nat,k=e.Variant({Int:e.Int,Nat:e.Nat,Blob:e.Vec(e.Nat8),Text:e.Text}),z=e.Nat64,te=e.Record({to:r,fee:e.Opt(m),memo:e.Opt(e.Vec(e.Nat8)),from_subaccount:e.Opt(t),created_at_time:e.Opt(z),amount:m}),B=e.Nat,re=e.Variant({GenericError:e.Record({message:e.Text,error_code:e.Nat}),TemporarilyUnavailable:e.Null,BadBurn:e.Record({min_burn_amount:m}),Duplicate:e.Record({duplicate_of:B}),BadFee:e.Record({expected_fee:m}),CreatedInFuture:e.Record({ledger_time:e.Nat64}),TooOld:e.Null,InsufficientFunds:e.Record({balance:m})}),ne=e.Variant({Ok:B,Err:re}),ce=e.Record({account:r,spender:r}),b=e.Record({timestamp_nanos:e.Nat64}),oe=e.Record({allowance:m,expires_at:e.Opt(b)}),ae=e.Record({fee:e.Opt(m),memo:e.Opt(e.Vec(e.Nat8)),from_subaccount:e.Opt(t),created_at_time:e.Opt(b),amount:m,expected_allowance:e.Opt(m),expires_at:e.Opt(b),spender:r}),se=e.Variant({GenericError:e.Record({message:e.Text,error_code:e.Nat}),TemporarilyUnavailable:e.Null,Duplicate:e.Record({duplicate_of:B}),BadFee:e.Record({expected_fee:m}),AllowanceChanged:e.Record({current_allowance:m}),CreatedInFuture:e.Record({ledger_time:e.Nat64}),TooOld:e.Null,Expired:e.Record({ledger_time:e.Nat64}),InsufficientFunds:e.Record({balance:m})}),ie=e.Variant({Ok:B,Err:se}),R=e.Nat64,P=e.Record({start:R,length:e.Nat64}),x=e.Nat64,ue=e.Variant({Approve:e.Record({fee:c,from:s,allowance_e8s:e.Int,allowance:c,expires_at:e.Opt(b),spender:s}),Burn:e.Record({from:s,amount:c,spender:e.Opt(s)}),Mint:e.Record({to:s,amount:c}),Transfer:e.Record({to:s,fee:c,from:s,amount:c}),TransferFrom:e.Record({to:s,fee:c,from:s,amount:c,spender:s})}),de=e.Record({memo:x,icrc1_memo:e.Opt(e.Vec(e.Nat8)),operation:e.Opt(ue),created_at_time:b}),j=e.Record({transaction:de,timestamp:b,parent_hash:e.Opt(e.Vec(e.Nat8))}),S=e.Record({blocks:e.Vec(j)}),Q=e.Variant({BadFirstBlockIndex:e.Record({requested_index:R,first_valid_index:R}),Other:e.Record({error_message:e.Text,error_code:e.Nat64})}),pe=e.Variant({Ok:S,Err:Q}),le=e.Func([P],[pe],["query"]),fe=e.Record({callback:le,start:R,length:e.Nat64}),me=e.Record({certificate:e.Opt(e.Vec(e.Nat8)),blocks:e.Vec(j),chain_length:e.Nat64,first_block_index:R,archived_blocks:e.Vec(fe)}),_e=e.Record({callback:e.Func([P],[e.Variant({Ok:e.Vec(e.Vec(e.Nat8)),Err:Q})],["query"]),start:e.Nat64,length:e.Nat64}),xe=e.Record({certificate:e.Opt(e.Vec(e.Nat8)),blocks:e.Vec(e.Vec(e.Nat8)),chain_length:e.Nat64,first_block_index:e.Nat64,archived_blocks:e.Vec(_e)}),he=e.Record({to:a,fee:c,memo:x,from_subaccount:e.Opt(t),created_at_time:e.Opt(b),amount:c}),ye=e.Record({to:s,fee:c,memo:x,from_subaccount:e.Opt(t),created_at_time:e.Opt(b),amount:c}),ge=e.Variant({TxTooOld:e.Record({allowed_window_nanos:e.Nat64}),BadFee:e.Record({expected_fee:c}),TxDuplicate:e.Record({duplicate_of:R}),TxCreatedInFuture:e.Null,InsufficientFunds:e.Record({balance:c})}),be=e.Variant({Ok:R,Err:ge}),Re=e.Record({}),Te=e.Record({transfer_fee:c});return e.Service({account_balance:e.Func([l],[c],["query"]),account_balance_dfx:e.Func([_],[c],["query"]),account_identifier:e.Func([r],[s],["query"]),archives:e.Func([],[d],["query"]),decimals:e.Func([],[e.Record({decimals:e.Nat32})],["query"]),icrc1_balance_of:e.Func([r],[m],["query"]),icrc1_decimals:e.Func([],[e.Nat8],["query"]),icrc1_fee:e.Func([],[m],["query"]),icrc1_metadata:e.Func([],[e.Vec(e.Tuple(e.Text,k))],["query"]),icrc1_minting_account:e.Func([],[e.Opt(r)],["query"]),icrc1_name:e.Func([],[e.Text],["query"]),icrc1_supported_standards:e.Func([],[e.Vec(e.Record({url:e.Text,name:e.Text}))],["query"]),icrc1_symbol:e.Func([],[e.Text],["query"]),icrc1_total_supply:e.Func([],[m],["query"]),icrc1_transfer:e.Func([te],[ne],[]),icrc2_allowance:e.Func([ce],[oe],["query"]),icrc2_approve:e.Func([ae],[ie],[]),name:e.Func([],[e.Record({name:e.Text})],["query"]),query_blocks:e.Func([P],[me],["query"]),query_encoded_blocks:e.Func([P],[xe],["query"]),send_dfx:e.Func([he],[R],[]),symbol:e.Func([],[e.Record({symbol:e.Text})],["query"]),transfer:e.Func([ye],[be],[]),transfer_fee:e.Func([Re],[Te],["query"])})};var V=require("@dfinity/utils");var Yt=BigInt(1095062083),It=BigInt(1347768404),E=BigInt(1e4),Lt=BigInt(1e8);var Ze=async e=>{let t=new Uint8Array(e).buffer,{Subaccount:r}=await N(),n=new r;return n.setSubAccount(new Uint8Array(t)),n},Pe=async e=>{let{ICPTs:t}=await N(),r=new t;return r.setE8s(e.toString(10)),r},Ke=e=>({e8s:e}),Ye=({to:e,amount:t,memo:r,fee:n,fromSubAccount:o,createdAt:c})=>({to:e.toUint8Array(),fee:Ke(n??E),amount:Ke(t),memo:r??BigInt(0),created_at_time:c!==void 0?[{timestamp_nanos:c}]:[],from_subaccount:o===void 0?[]:[(0,V.arrayOfNumberToUint8Array)(o)]}),Ie=({fromSubAccount:e,to:t,amount:r,fee:n,icrc1Memo:o,createdAt:c})=>({to:t,fee:(0,V.toNullable)(n??E),amount:r,memo:(0,V.toNullable)(o),created_at_time:(0,V.toNullable)(c),from_subaccount:(0,V.toNullable)(e)});var ee=class e{constructor(t,r,n,o,c,a,i=!1){this.agent=t;this.canisterId=r;this.service=n;this.certifiedService=o;this.updateFetcher=c;this.queryFetcher=a;this.hardwareWallet=i;this.accountBalance=async({accountIdentifier:t,certified:r=!0})=>{let n=Qe(t);return this.hardwareWallet?this.accountBalanceHardwareWallet({accountIdentifier:n,certified:r}):(await(r?this.certifiedService:this.service).account_balance({account:n.toUint8Array()})).e8s};this.transactionFee=async()=>{let{transfer_fee:{e8s:t}}=await this.service.transfer_fee({});return t};this.transfer=async t=>{if(this.hardwareWallet)return this.transferHardwareWallet(t);t.fee===void 0&&(t.fee=this.hardwareWallet?E:await this.transactionFee());let r=Ye(t),n=await this.certifiedService.transfer(r);if("Err"in n)throw ke(n.Err);return n.Ok};this.icrc1Transfer=async t=>{t.fee===void 0&&(t.fee=this.hardwareWallet?E:await this.transactionFee());let r=Ie(t),n=await this.certifiedService.icrc1_transfer(r);if("Err"in n)throw Be(n.Err);return n.Ok};this.accountBalanceHardwareWallet=async({accountIdentifier:t,certified:r=!0})=>{let n=r?this.updateFetcher:this.queryFetcher,{AccountBalanceRequest:o,ICPTs:c}=await N(),a=new o;a.setAccount(await t.toProto());let i=await n({agent:this.agent,canisterId:this.canisterId,methodName:"account_balance_pb",arg:a.serializeBinary()});return BigInt(c.deserializeBinary(new Uint8Array(i)).getE8s())};this.transferHardwareWallet=async({to:t,amount:r,memo:n,fee:o,fromSubAccount:c,createdAt:a})=>{let{SendRequest:i,Payment:u,Memo:f,TimeStamp:h,BlockHeight:s}=await N(),l=new i;l.setTo(await t.toProto());let _=new u;_.setReceiverGets(await Pe(r)),l.setPayment(_),l.setMaxFee(await Pe(o??E));let p=new f;if(p.setMemo((n??BigInt(0)).toString()),l.setMemo(p),a!==void 0){let d=new h;d.setTimestampNanos(a.toString()),l.setCreatedAtTime(d)}c!==void 0&&l.setFromSubaccount(await Ze(c));try{let d=await this.updateFetcher({agent:this.agent,canisterId:this.canisterId,methodName:"send_pb",arg:l.serializeBinary()});return BigInt(s.deserializeBinary(d).getHeight())}catch(d){throw d instanceof Error?ve(d):d}}}static create(t={}){let r=t.canisterId??ze,{service:n,certifiedService:o,agent:c}=(0,Le.createServices)({options:{...t,canisterId:r},idlFactory:Je,certifiedIdlFactory:Xe});return new e(c,r,n,o,t.updateCallOverride??He,t.queryCallOverride??Ge,t.hardwareWallet)}};var F=require("@dfinity/utils");var Se=require("buffer"),xt=e=>Uint8Array.from(Se.Buffer.from(e,"hex")).subarray(4),ht=e=>Se.Buffer.from(e).toString("hex"),yt=(e,t)=>{let r=(0,F.asciiStringToByteArray)(`
account-id`),n=Y.create();n.update((0,F.arrayOfNumberToUint8Array)([...r,...e.toUint8Array(),...t??Array(32).fill(0)]));let o=n.digest(),c=(0,F.bigEndianCrc32)(o),a=new Uint8Array([...c,...o]);return(0,F.uint8ArrayToHexString)(a)};var De=require("@dfinity/utils");var gt=e=>{if(e.length!=64)throw new q(`Invalid account identifier ${e}. The account identifier must be 64 chars in length.`);let t=Buffer.from(e,"hex"),r=t.slice(0,4),n=Buffer.from((0,De.bigEndianCrc32)(t.slice(4)));if(!n.equals(r))throw new q(`Account identifier ${e} has an invalid checksum. Are you sure the account identifier is correct?

Expected checksum: ${n.toString("hex")}
Found checksum: ${r.toString("hex")}`)};0&&(module.exports={AccountIdentifier,BadFeeError,IndexCanister,InsufficientFundsError,InvalidAccountIDError,InvalidSenderError,LedgerCanister,SubAccount,TransferError,TxCreatedInFutureError,TxDuplicateError,TxTooOldError,accountIdentifierFromBytes,accountIdentifierToBytes,checkAccountId,mapIcrc1TransferError,mapTransferError,mapTransferProtoError,principalToAccountIdentifier});
/*! Bundled license information:

@noble/hashes/esm/utils.js:
  (*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) *)
*/
//# sourceMappingURL=index.cjs.js.map
