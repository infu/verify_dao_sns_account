import{a as ie,c as ue}from"./chunk-FDULYIEM.js";import{d as b,e as oe,f as se}from"./chunk-KGPYYIL2.js";import{createServices as xe}from"@dfinity/utils";var de=({IDL:e})=>{let r=e.Vec(e.Nat8),t=e.Record({owner:e.Principal,subaccount:e.Opt(r)}),n=e.Record({icrc2:e.Bool}),d=e.Record({maximum_number_of_accounts:e.Opt(e.Nat64),icrc1_minting_account:e.Opt(t),feature_flags:e.Opt(n)}),c=e.Record({e8s:e.Nat64}),l=e.Text,R=e.Record({secs:e.Nat64,nanos:e.Nat32}),x=e.Record({num_blocks_to_archive:e.Nat64,trigger_threshold:e.Nat64,max_message_size_bytes:e.Opt(e.Nat64),cycles_for_archive_creation:e.Opt(e.Nat64),node_max_memory_size_bytes:e.Opt(e.Nat64),controller_id:e.Principal}),h=e.Record({send_whitelist:e.Vec(e.Principal),token_symbol:e.Opt(e.Text),transfer_fee:e.Opt(c),minting_account:l,maximum_number_of_accounts:e.Opt(e.Nat64),accounts_overflow_trim_quantity:e.Opt(e.Nat64),transaction_window:e.Opt(R),max_message_size_bytes:e.Opt(e.Nat64),icrc1_minting_account:e.Opt(t),archive_options:e.Opt(x),initial_values:e.Vec(e.Tuple(l,c)),token_name:e.Opt(e.Text),feature_flags:e.Opt(n)}),P=e.Variant({Upgrade:e.Opt(d),Init:h}),a=e.Nat64,p=e.Record({start:a,length:e.Nat64}),g=e.Nat64,i=e.Vec(e.Nat8),o=e.Record({timestamp_nanos:e.Nat64}),u=e.Variant({Approve:e.Record({fee:c,from:i,allowance_e8s:e.Int,allowance:c,expires_at:e.Opt(o),spender:i}),Burn:e.Record({from:i,amount:c,spender:e.Opt(i)}),Mint:e.Record({to:i,amount:c}),Transfer:e.Record({to:i,fee:c,from:i,amount:c}),TransferFrom:e.Record({to:i,fee:c,from:i,amount:c,spender:i})}),C=e.Record({memo:g,icrc1_memo:e.Opt(e.Vec(e.Nat8)),operation:e.Opt(u),created_at_time:o}),k=e.Record({transaction:C,timestamp:o,parent_hash:e.Opt(e.Vec(e.Nat8))}),S=e.Record({blocks:e.Vec(k)}),O=e.Variant({BadFirstBlockIndex:e.Record({requested_index:a,first_valid_index:a}),Other:e.Record({error_message:e.Text,error_code:e.Nat64})}),U=e.Variant({Ok:S,Err:O}),z=e.Func([p],[U],[]),M=e.Record({callback:z,start:a,length:e.Nat64}),_=e.Record({certificate:e.Opt(e.Vec(e.Nat8)),blocks:e.Vec(k),chain_length:e.Nat64,first_block_index:a,archived_blocks:e.Vec(M)}),H=e.Record({callback:e.Func([p],[e.Variant({Ok:e.Vec(e.Vec(e.Nat8)),Err:O})],[]),start:e.Nat64,length:e.Nat64}),Q=e.Record({certificate:e.Opt(e.Vec(e.Nat8)),blocks:e.Vec(e.Vec(e.Nat8)),chain_length:e.Nat64,first_block_index:e.Nat64,archived_blocks:e.Vec(H)}),W=e.Record({account:i}),G=e.Record({account:l}),m=e.Record({canister_id:e.Principal}),y=e.Record({archives:e.Vec(m)}),s=e.Nat,J=e.Variant({Int:e.Int,Nat:e.Nat,Blob:e.Vec(e.Nat8),Text:e.Text}),$=e.Nat64,V=e.Record({to:t,fee:e.Opt(s),memo:e.Opt(e.Vec(e.Nat8)),from_subaccount:e.Opt(r),created_at_time:e.Opt($),amount:s}),T=e.Nat,B=e.Variant({GenericError:e.Record({message:e.Text,error_code:e.Nat}),TemporarilyUnavailable:e.Null,BadBurn:e.Record({min_burn_amount:s}),Duplicate:e.Record({duplicate_of:T}),BadFee:e.Record({expected_fee:s}),CreatedInFuture:e.Record({ledger_time:e.Nat64}),TooOld:e.Null,InsufficientFunds:e.Record({balance:s})}),j=e.Variant({Ok:T,Err:B}),K=e.Record({account:t,spender:t}),Y=e.Record({allowance:s,expires_at:e.Opt(o)}),X=e.Record({fee:e.Opt(s),memo:e.Opt(e.Vec(e.Nat8)),from_subaccount:e.Opt(r),created_at_time:e.Opt(o),amount:s,expected_allowance:e.Opt(s),expires_at:e.Opt(o),spender:t}),Z=e.Variant({GenericError:e.Record({message:e.Text,error_code:e.Nat}),TemporarilyUnavailable:e.Null,Duplicate:e.Record({duplicate_of:T}),BadFee:e.Record({expected_fee:s}),AllowanceChanged:e.Record({current_allowance:s}),CreatedInFuture:e.Record({ledger_time:e.Nat64}),TooOld:e.Null,Expired:e.Record({ledger_time:e.Nat64}),InsufficientFunds:e.Record({balance:s})}),I=e.Variant({Ok:T,Err:Z}),D=e.Record({to:l,fee:c,memo:g,from_subaccount:e.Opt(r),created_at_time:e.Opt(o),amount:c}),L=e.Record({to:i,fee:c,memo:g,from_subaccount:e.Opt(r),created_at_time:e.Opt(o),amount:c}),ee=e.Variant({TxTooOld:e.Record({allowed_window_nanos:e.Nat64}),BadFee:e.Record({expected_fee:c}),TxDuplicate:e.Record({duplicate_of:a}),TxCreatedInFuture:e.Null,InsufficientFunds:e.Record({balance:c})}),te=e.Variant({Ok:a,Err:ee}),re=e.Record({}),ce=e.Record({transfer_fee:c});return e.Service({_blocks:e.Func([p],[_],[]),_encoded_blocks:e.Func([p],[Q],[]),account_balance:e.Func([W],[c],[]),account_balance_dfx:e.Func([G],[c],[]),account_identifier:e.Func([t],[i],[]),archives:e.Func([],[y],[]),decimals:e.Func([],[e.Record({decimals:e.Nat32})],[]),icrc1_balance_of:e.Func([t],[s],[]),icrc1_decimals:e.Func([],[e.Nat8],[]),icrc1_fee:e.Func([],[s],[]),icrc1_metadata:e.Func([],[e.Vec(e.Tuple(e.Text,J))],[]),icrc1_minting_account:e.Func([],[e.Opt(t)],[]),icrc1_name:e.Func([],[e.Text],[]),icrc1_supported_standards:e.Func([],[e.Vec(e.Record({url:e.Text,name:e.Text}))],[]),icrc1_symbol:e.Func([],[e.Text],[]),icrc1_total_supply:e.Func([],[s],[]),icrc1_transfer:e.Func([V],[j],[]),icrc2_allowance:e.Func([K],[Y],[]),icrc2_approve:e.Func([X],[I],[]),name:e.Func([],[e.Record({name:e.Text})],[]),send_dfx:e.Func([D],[a],[]),symbol:e.Func([],[e.Record({symbol:e.Text})],[]),transfer:e.Func([L],[te],[]),transfer_fee:e.Func([re],[ce],[])})};var le=({IDL:e})=>{let r=e.Vec(e.Nat8),t=e.Record({owner:e.Principal,subaccount:e.Opt(r)}),n=e.Record({icrc2:e.Bool}),d=e.Record({maximum_number_of_accounts:e.Opt(e.Nat64),icrc1_minting_account:e.Opt(t),feature_flags:e.Opt(n)}),c=e.Record({e8s:e.Nat64}),l=e.Text,R=e.Record({secs:e.Nat64,nanos:e.Nat32}),x=e.Record({num_blocks_to_archive:e.Nat64,trigger_threshold:e.Nat64,max_message_size_bytes:e.Opt(e.Nat64),cycles_for_archive_creation:e.Opt(e.Nat64),node_max_memory_size_bytes:e.Opt(e.Nat64),controller_id:e.Principal}),h=e.Record({send_whitelist:e.Vec(e.Principal),token_symbol:e.Opt(e.Text),transfer_fee:e.Opt(c),minting_account:l,maximum_number_of_accounts:e.Opt(e.Nat64),accounts_overflow_trim_quantity:e.Opt(e.Nat64),transaction_window:e.Opt(R),max_message_size_bytes:e.Opt(e.Nat64),icrc1_minting_account:e.Opt(t),archive_options:e.Opt(x),initial_values:e.Vec(e.Tuple(l,c)),token_name:e.Opt(e.Text),feature_flags:e.Opt(n)}),P=e.Variant({Upgrade:e.Opt(d),Init:h}),a=e.Vec(e.Nat8),p=e.Record({account:a}),g=e.Record({account:l}),i=e.Record({canister_id:e.Principal}),o=e.Record({archives:e.Vec(i)}),u=e.Nat,C=e.Variant({Int:e.Int,Nat:e.Nat,Blob:e.Vec(e.Nat8),Text:e.Text}),k=e.Nat64,S=e.Record({to:t,fee:e.Opt(u),memo:e.Opt(e.Vec(e.Nat8)),from_subaccount:e.Opt(r),created_at_time:e.Opt(k),amount:u}),O=e.Nat,U=e.Variant({GenericError:e.Record({message:e.Text,error_code:e.Nat}),TemporarilyUnavailable:e.Null,BadBurn:e.Record({min_burn_amount:u}),Duplicate:e.Record({duplicate_of:O}),BadFee:e.Record({expected_fee:u}),CreatedInFuture:e.Record({ledger_time:e.Nat64}),TooOld:e.Null,InsufficientFunds:e.Record({balance:u})}),z=e.Variant({Ok:O,Err:U}),M=e.Record({account:t,spender:t}),_=e.Record({timestamp_nanos:e.Nat64}),H=e.Record({allowance:u,expires_at:e.Opt(_)}),Q=e.Record({fee:e.Opt(u),memo:e.Opt(e.Vec(e.Nat8)),from_subaccount:e.Opt(r),created_at_time:e.Opt(_),amount:u,expected_allowance:e.Opt(u),expires_at:e.Opt(_),spender:t}),W=e.Variant({GenericError:e.Record({message:e.Text,error_code:e.Nat}),TemporarilyUnavailable:e.Null,Duplicate:e.Record({duplicate_of:O}),BadFee:e.Record({expected_fee:u}),AllowanceChanged:e.Record({current_allowance:u}),CreatedInFuture:e.Record({ledger_time:e.Nat64}),TooOld:e.Null,Expired:e.Record({ledger_time:e.Nat64}),InsufficientFunds:e.Record({balance:u})}),G=e.Variant({Ok:O,Err:W}),m=e.Nat64,y=e.Record({start:m,length:e.Nat64}),s=e.Nat64,J=e.Variant({Approve:e.Record({fee:c,from:a,allowance_e8s:e.Int,allowance:c,expires_at:e.Opt(_),spender:a}),Burn:e.Record({from:a,amount:c,spender:e.Opt(a)}),Mint:e.Record({to:a,amount:c}),Transfer:e.Record({to:a,fee:c,from:a,amount:c}),TransferFrom:e.Record({to:a,fee:c,from:a,amount:c,spender:a})}),$=e.Record({memo:s,icrc1_memo:e.Opt(e.Vec(e.Nat8)),operation:e.Opt(J),created_at_time:_}),V=e.Record({transaction:$,timestamp:_,parent_hash:e.Opt(e.Vec(e.Nat8))}),T=e.Record({blocks:e.Vec(V)}),B=e.Variant({BadFirstBlockIndex:e.Record({requested_index:m,first_valid_index:m}),Other:e.Record({error_message:e.Text,error_code:e.Nat64})}),j=e.Variant({Ok:T,Err:B}),K=e.Func([y],[j],["query"]),Y=e.Record({callback:K,start:m,length:e.Nat64}),X=e.Record({certificate:e.Opt(e.Vec(e.Nat8)),blocks:e.Vec(V),chain_length:e.Nat64,first_block_index:m,archived_blocks:e.Vec(Y)}),Z=e.Record({callback:e.Func([y],[e.Variant({Ok:e.Vec(e.Vec(e.Nat8)),Err:B})],["query"]),start:e.Nat64,length:e.Nat64}),I=e.Record({certificate:e.Opt(e.Vec(e.Nat8)),blocks:e.Vec(e.Vec(e.Nat8)),chain_length:e.Nat64,first_block_index:e.Nat64,archived_blocks:e.Vec(Z)}),D=e.Record({to:l,fee:c,memo:s,from_subaccount:e.Opt(r),created_at_time:e.Opt(_),amount:c}),L=e.Record({to:a,fee:c,memo:s,from_subaccount:e.Opt(r),created_at_time:e.Opt(_),amount:c}),ee=e.Variant({TxTooOld:e.Record({allowed_window_nanos:e.Nat64}),BadFee:e.Record({expected_fee:c}),TxDuplicate:e.Record({duplicate_of:m}),TxCreatedInFuture:e.Null,InsufficientFunds:e.Record({balance:c})}),te=e.Variant({Ok:m,Err:ee}),re=e.Record({}),ce=e.Record({transfer_fee:c});return e.Service({account_balance:e.Func([p],[c],["query"]),account_balance_dfx:e.Func([g],[c],["query"]),account_identifier:e.Func([t],[a],["query"]),archives:e.Func([],[o],["query"]),decimals:e.Func([],[e.Record({decimals:e.Nat32})],["query"]),icrc1_balance_of:e.Func([t],[u],["query"]),icrc1_decimals:e.Func([],[e.Nat8],["query"]),icrc1_fee:e.Func([],[u],["query"]),icrc1_metadata:e.Func([],[e.Vec(e.Tuple(e.Text,C))],["query"]),icrc1_minting_account:e.Func([],[e.Opt(t)],["query"]),icrc1_name:e.Func([],[e.Text],["query"]),icrc1_supported_standards:e.Func([],[e.Vec(e.Record({url:e.Text,name:e.Text}))],["query"]),icrc1_symbol:e.Func([],[e.Text],["query"]),icrc1_total_supply:e.Func([],[u],["query"]),icrc1_transfer:e.Func([S],[z],[]),icrc2_allowance:e.Func([M],[H],["query"]),icrc2_approve:e.Func([Q],[G],[]),name:e.Func([],[e.Record({name:e.Text})],["query"]),query_blocks:e.Func([y],[X],["query"]),query_encoded_blocks:e.Func([y],[I],["query"]),send_dfx:e.Func([D],[m],[]),symbol:e.Func([],[e.Record({symbol:e.Text})],["query"]),transfer:e.Func([L],[te],[]),transfer_fee:e.Func([re],[ce],["query"])})};import{arrayOfNumberToUint8Array as Te,toNullable as q}from"@dfinity/utils";var we=BigInt(1095062083),Ae=BigInt(1347768404),N=BigInt(1e4),ve=BigInt(1e8);var _e=async e=>{let r=new Uint8Array(e).buffer,{Subaccount:t}=await b(),n=new t;return n.setSubAccount(new Uint8Array(r)),n},ne=async e=>{let{ICPTs:r}=await b(),t=new r;return t.setE8s(e.toString(10)),t},pe=e=>({e8s:e}),me=({to:e,amount:r,memo:t,fee:n,fromSubAccount:d,createdAt:c})=>({to:e.toUint8Array(),fee:pe(n??N),amount:pe(r),memo:t??BigInt(0),created_at_time:c!==void 0?[{timestamp_nanos:c}]:[],from_subaccount:d===void 0?[]:[Te(d)]}),fe=({fromSubAccount:e,to:r,amount:t,fee:n,icrc1Memo:d,createdAt:c})=>({to:r,fee:q(n??N),amount:t,memo:q(d),created_at_time:q(c),from_subaccount:q(e)});import{convertStringToE8s as be}from"@dfinity/utils";var f=class extends Error{},ae=class extends f{},Re=class extends Error{},F=class extends f{constructor(t){super();this.balance=t}},w=class extends f{constructor(t){super();this.allowed_window_secs=t}},A=class extends f{},v=class extends f{constructor(t){super();this.duplicateOf=t}},E=class extends f{constructor(t){super();this.expectedFee=t}},ge=e=>"TxDuplicate"in e?new v(e.TxDuplicate.duplicate_of):"InsufficientFunds"in e?new F(e.InsufficientFunds.balance.e8s):"TxCreatedInFuture"in e?new A:"TxTooOld"in e?new w(Number(e.TxTooOld.allowed_window_nanos)):"BadFee"in e?new E(e.BadFee.expected_fee.e8s):new f(`Unknown error type ${JSON.stringify(e)}`),Oe=e=>"Duplicate"in e?new v(e.Duplicate.duplicate_of):"InsufficientFunds"in e?new F(e.InsufficientFunds.balance):"CreatedInFuture"in e?new A:"TooOld"in e?new w:"BadFee"in e?new E(e.BadFee.expected_fee):new f(`Unknown error type ${JSON.stringify(e)}`),Ne=e=>{let{message:r}=e;if(r.includes("Reject code: 5")){if(r.match(/Sending from (.*) is not allowed/))return new ae;{let t=r.match(/transaction.*duplicate.* in block (\d+)/);if(t&&t.length>1)return new v(BigInt(t[1]))}{let t=r.match(/debit account.*, current balance: (\d*(\.\d*)?)/);if(t&&t.length>1){let n=be(t[1]);if(typeof n=="bigint")return new F(n)}}if(r.includes("is in future"))return new A;{let t=r.match(/older than (\d+)/);if(t&&t.length>1)return new w(Number.parseInt(t[1]))}}throw e};var ye=class e{constructor(r,t,n,d,c,l,R=!1){this.agent=r;this.canisterId=t;this.service=n;this.certifiedService=d;this.updateFetcher=c;this.queryFetcher=l;this.hardwareWallet=R;this.accountBalance=async({accountIdentifier:r,certified:t=!0})=>{let n=ue(r);return this.hardwareWallet?this.accountBalanceHardwareWallet({accountIdentifier:n,certified:t}):(await(t?this.certifiedService:this.service).account_balance({account:n.toUint8Array()})).e8s};this.transactionFee=async()=>{let{transfer_fee:{e8s:r}}=await this.service.transfer_fee({});return r};this.transfer=async r=>{if(this.hardwareWallet)return this.transferHardwareWallet(r);r.fee===void 0&&(r.fee=this.hardwareWallet?N:await this.transactionFee());let t=me(r),n=await this.certifiedService.transfer(t);if("Err"in n)throw ge(n.Err);return n.Ok};this.icrc1Transfer=async r=>{r.fee===void 0&&(r.fee=this.hardwareWallet?N:await this.transactionFee());let t=fe(r),n=await this.certifiedService.icrc1_transfer(t);if("Err"in n)throw Oe(n.Err);return n.Ok};this.accountBalanceHardwareWallet=async({accountIdentifier:r,certified:t=!0})=>{let n=t?this.updateFetcher:this.queryFetcher,{AccountBalanceRequest:d,ICPTs:c}=await b(),l=new d;l.setAccount(await r.toProto());let R=await n({agent:this.agent,canisterId:this.canisterId,methodName:"account_balance_pb",arg:l.serializeBinary()});return BigInt(c.deserializeBinary(new Uint8Array(R)).getE8s())};this.transferHardwareWallet=async({to:r,amount:t,memo:n,fee:d,fromSubAccount:c,createdAt:l})=>{let{SendRequest:R,Payment:x,Memo:h,TimeStamp:P,BlockHeight:a}=await b(),p=new R;p.setTo(await r.toProto());let g=new x;g.setReceiverGets(await ne(t)),p.setPayment(g),p.setMaxFee(await ne(d??N));let i=new h;if(i.setMemo((n??BigInt(0)).toString()),p.setMemo(i),l!==void 0){let o=new P;o.setTimestampNanos(l.toString()),p.setCreatedAtTime(o)}c!==void 0&&p.setFromSubaccount(await _e(c));try{let o=await this.updateFetcher({agent:this.agent,canisterId:this.canisterId,methodName:"send_pb",arg:p.serializeBinary()});return BigInt(a.deserializeBinary(o).getHeight())}catch(o){throw o instanceof Error?Ne(o):o}}}static create(r={}){let t=r.canisterId??ie,{service:n,certifiedService:d,agent:c}=xe({options:{...r,canisterId:t},idlFactory:le,certifiedIdlFactory:de});return new e(c,t,n,d,r.updateCallOverride??oe,r.queryCallOverride??se,r.hardwareWallet)}};export{f as a,ae as b,Re as c,F as d,w as e,A as f,v as g,E as h,ge as i,Oe as j,Ne as k,ye as l};
//# sourceMappingURL=chunk-36TAFREE.js.map
