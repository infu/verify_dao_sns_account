import{a as S,b as m}from"./chunk-MJQNXPUY.js";import{a as b,b as p}from"./chunk-DXWXHYEN.js";var d=(t=>(t.SYMBOL="icrc1:symbol",t.NAME="icrc1:name",t.DECIMALS="icrc1:decimals",t.FEE="icrc1:fee",t.LOGO="icrc1:logo",t))(d||{});import{Principal as a}from"@dfinity/principal";import{bigEndianCrc32 as f,encodeBase32 as x,hexStringToUint8Array as l,isNullish as s,notEmptyString as T,uint8ArrayToHexString as I}from"@dfinity/utils";var g=64,C=({owner:r,subaccount:c})=>{if(s(c))return r.toText();let n=(i=>i.replace(/^0+/,""))(I(Uint8Array.from(c)));return n.length===0?r.toText():`${r.toText()}-${u({owner:r,subaccount:c})}.${n}`},u=({owner:r,subaccount:c})=>{let e=f(Uint8Array.from([...r.toUint8Array(),...c]));return x(e)},E=r=>{let[c,e]=r.split(".");if(!T(c))throw new Error("Invalid account. No string provided.");if(s(e))return{owner:a.fromText(r)};let[n,...i]=c.split("-").reverse(),t=i.reverse().join("-"),o={owner:a.fromText(t),subaccount:l(e.padStart(g,"0"))};if(u(o)!==n)throw new Error("Invalid account. Invalid checksum.");return o};import{isNullish as A,nonNullish as y}from"@dfinity/utils";var U=r=>{let c=/^([a-zA-Z]+):([A-Za-z0-9:\-.]+).*?(?:[?&](?:amount|value)=(\d+(?:\.\d+)?))?$/,e=r.match(c);if(A(e))return;let[n,i,t,o]=e;return{token:i,identifier:t,...y(o)&&!isNaN(parseFloat(o))&&{amount:parseFloat(o)}}};export{m as IcrcIndexCanister,p as IcrcLedgerCanister,d as IcrcMetadataResponseEntries,b as IcrcTransferError,S as IndexError,E as decodeIcrcAccount,U as decodePayment,C as encodeIcrcAccount};
//# sourceMappingURL=index.js.map
